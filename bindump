#!/bin/python
from sys import argv
from os import system

def main(filename):
    file=filename.split(".")
    if file[0] != "":
        file=file[0]
    else:
        file=file[1] 
    bits=["0", "1", " "]
    print("[Please Wait]: XXD is writing full data...", end="")
    system("xxd -d -b {} > {}-bindump.txt".format(filename, file))
    print("[DONE]")
    binfile=open(f"{file}-bindump.txt", "r").readlines()
    newbinfile=[]
    print("[Please Wait]: Removing extra file dump...", end="")
    for i in range(0, len(binfile)-1):
        line=binfile[i]
        newline=""
        for l in range(0, len(line)-1):
            if line[l]==":":
                start=l
                break
            l+=1
        for i in range(start, len(line)-1):
            if line[i] in bits and i<64:
                newline=newline+line[i]
        newbinfile.append(newline+"\n")
    binfile=open(f"{file}-bindump.txt", "w")
    binfile.writelines(newbinfile)
    print("[DONE]")
if __name__ == "__main__":
    if len(argv)-1 == 1:
        getargval=argv[1]
        if not getargval[0] == "-":
            main(argv[1])
        else:
            if getargval == "-h" or getargval == "--help":
                print("usage: bindump <filename>.")
                print("To seek the binary contents of a file.")
                print("This will create a file, which has the name of your file, followed by the word bindump. If you look inside that file, you will see all the bytes which are in your file.")
                print("PLEASE NOTE: Use only as a developer, to find out what bugs are in your code.")
            else:    
                print("bindump: invalid option {}".format(argv[1]))
    else:
        print("bindump: no file specified. Try --help -h for how to use this program.")
